import { ConvectorController } from '@worldsibu/convector-core-controller';
import { Supplier } from './models/Supplier.model';
import { Manufacturer } from './models/Manufacturer.model';
import { Distributor } from './models/Distributor.model';
import { Retailer } from './models/Retailer.model';
import { Customer } from './models/Customer.model';
export declare class SupplychainchaincodeController extends ConvectorController {
    createSupplier(supplier: Supplier): Promise<void>;
    createManufacturer(manufacturer: Manufacturer): Promise<void>;
    createDistributor(distributor: Distributor): Promise<void>;
    createRetailer(retailer: Retailer): Promise<void>;
    createCustomer(customer: Customer): Promise<void>;
    getAllSuppliers(): Promise<Supplier[]>;
    getSupplierById(supplierId: string): Promise<Supplier>;
    getAllManufacturers(): Promise<Manufacturer[]>;
    getManufacturerById(manufacturerId: string): Promise<Manufacturer>;
    getAllDistributors(): Promise<Distributor[]>;
    getDistributorById(distributorId: string): Promise<Distributor>;
    getAllRetailers(): Promise<Retailer[]>;
    getRetailerById(retailerId: string): Promise<Retailer>;
    getAllCustomers(): Promise<Customer[]>;
    getCustomerById(customerId: string): Promise<Customer>;
    getAllModels(): Promise<void>;
    fetchRawMaterial(supplierId: string, rawMaterialSupply: number): Promise<void>;
    getRawMaterialFromSupplier(manufacturerId: string, supplierId: string, rawMaterialSupply: number): Promise<void>;
    createProducts(manufacturerId: string, rawMaterialConsumed: number, productsCreated: number): Promise<void>;
    sendProductsToDistribution(manufacturerId: string, distributorId: string, sentProducts: number): Promise<void>;
    orderProductsFromDistributor(retailerId: string, distributorId: string, orderedProducts: number): Promise<void>;
    receiveProductsFromDistributor(retailerId: string, distributorId: string, receivedProducts: number): Promise<void>;
    buyProductsFromRetailer(retailerId: string, customerId: string, boughtProducts: number): Promise<void>;
}
